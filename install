-------------------------------------------------------------------------------------------
   https://docs.docker.com/install/linux/docker-ce/centos/#install-using-the-repository
-------------------------------------------------------------------------------------------

$ sudo yum install -y yum-utils device-mapper-persistent-data lvm2
...
...
...
...

Installed:
  yum-utils.noarch 0:1.1.31-50.el7                                                                                                        

Dependency Installed:
  libxml2-python.x86_64 0:2.9.1-6.el7_2.3        python-chardet.noarch 0:2.2.1-1.el7_1        python-kitchen.noarch 0:1.1.1-5.el7       

Updated:
  device-mapper-persistent-data.x86_64 0:0.7.3-3.el7                           lvm2.x86_64 7:2.02.180-10.el7_6.2                          

Dependency Updated:
  device-mapper.x86_64 7:1.02.149-10.el7_6.2                             device-mapper-event.x86_64 7:1.02.149-10.el7_6.2                 
  device-mapper-event-libs.x86_64 7:1.02.149-10.el7_6.2                  device-mapper-libs.x86_64 7:1.02.149-10.el7_6.2                  
  libxml2.x86_64 0:2.9.1-6.el7_2.3                                       lvm2-libs.x86_64 7:2.02.180-10.el7_6.2                           
  python-urlgrabber.noarch 0:3.10-9.el7                                  rpm.x86_64 0:4.11.3-35.el7                                       
  rpm-build-libs.x86_64 0:4.11.3-35.el7                                  rpm-libs.x86_64 0:4.11.3-35.el7                                  
  rpm-python.x86_64 0:4.11.3-35.el7                                      yum.noarch 0:3.4.3-161.el7.centos                                

Complete!

$ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo  
Loaded plugins: fastestmirror
adding repo from: https://download.docker.com/linux/centos/docker-ce.repo
grabbing file https://download.docker.com/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo
repo saved to /etc/yum.repos.d/docker-ce.repo


$ sudo yum install docker-ce
...
...
...
...

Installed:
  docker-ce.x86_64 3:18.09.0-3.el7                                                                                                        

Dependency Installed:
  audit-libs-python.x86_64 0:2.8.4-4.el7      checkpolicy.x86_64 0:2.5-8.el7              container-selinux.noarch 2:2.74-1.el7          
  containerd.io.x86_64 0:1.2.0-3.el7          docker-ce-cli.x86_64 1:18.09.0-3.el7        libcgroup.x86_64 0:0.41-20.el7                 
  libseccomp.x86_64 0:2.3.1-3.el7             libsemanage-python.x86_64 0:2.5-14.el7      policycoreutils-python.x86_64 0:2.5-29.el7     
  python-IPy.noarch 0:0.75-6.el7              setools-libs.x86_64 0:3.3.8-4.el7          

Dependency Updated:
  audit.x86_64 0:2.8.4-4.el7              audit-libs.x86_64 0:2.8.4-4.el7             libselinux.x86_64 0:2.5-14.1.el7                    
  libselinux-devel.x86_64 0:2.5-14.1.el7  libselinux-python.x86_64 0:2.5-14.1.el7     libselinux-utils.x86_64 0:2.5-14.1.el7              
  libsemanage.x86_64 0:2.5-14.el7         libsepol.x86_64 0:2.5-10.el7                libsepol-devel.x86_64 0:2.5-10.el7                  
  policycoreutils.x86_64 0:2.5-29.el7     selinux-policy.noarch 0:3.13.1-229.el7_6.6  selinux-policy-targeted.noarch 0:3.13.1-229.el7_6.6 

Complete!

  
$ sudo systemctl start docker

$ sudo docker run hello-world  
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
d1725b59e92d: Pull complete 
Digest: sha256:0add3ace90ecb4adbf7777e9aacf18357296e799f81cabc9fde470971e499788
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
$ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

-- end of fiel <-- 20200309 12:39 added